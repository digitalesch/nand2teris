<class>
<keyword>class</keyword>
<className>
<identifier>Main</identifier>
</className>
<symbol>{</symbol>
<subroutineDec>
<keyword>function</keyword>
<keyword>void</keyword>
<subroutineName>
<identifier>main</identifier>
</subroutineName>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<subroutineBody>
<symbol>{</symbol>
<subroutineVarDec>
<varDec>
<keyword>var</keyword>
<keyword>int</keyword>
<identifier>value</identifier>
<symbol>,</symbol>
<identifier>not_val</identifier>
<symbol>;</symbol>
</varDec>
</subroutineVarDec>
<statements>
<letStatement>
<keyword>let</keyword>
<assignVariable>
<assignVariableName>
<identifier>value</identifier>
</assignVariableName>
</assignVariable>
<symbol>=</symbol>
<expression>
<integerConstant>1</integerConstant>
</expression>
<symbol>;</symbol>
</letStatement>
<letStatement>
<keyword>let</keyword>
<assignVariable>
<assignVariableName>
<identifier>not_val</identifier>
</assignVariableName>
</assignVariable>
<symbol>=</symbol>
<expression>
<integerConstant>0</integerConstant>
</expression>
<symbol>;</symbol>
</letStatement>
<ifStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<expression>
<identifier>value</identifier>
<operation>=</operation>
<symbol>(</symbol>
<expression>
<identifier>not_val</identifier>
<operation>+</operation>
<integerConstant>1</integerConstant>
</expression>
<symbol>)</symbol>
</expression>
<symbol>)</symbol>
<symbol>{</symbol>
<statements_if>
<doStatement>
<keyword>do</keyword>
<subroutineCall>
<subroutineCallName>
<identifier>Output</identifier>
<symbol>.</symbol>
<identifier>printInt</identifier>
</subroutineCallName>
<numberParameters>1</numberParameters>
</subroutineCall>
<symbol>(</symbol>
<expressionList>
<expression>
<identifier>value</identifier>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements_if>
<symbol>}</symbol>
<keyword>else</keyword>
<symbol>{</symbol>
<statements_else>
<doStatement>
<keyword>do</keyword>
<subroutineCall>
<subroutineCallName>
<identifier>Output</identifier>
<symbol>.</symbol>
<identifier>printInt</identifier>
</subroutineCallName>
<numberParameters>1</numberParameters>
</subroutineCall>
<symbol>(</symbol>
<expressionList>
<expression>
<integerConstant>2999</integerConstant>
</expression>
</expressionList>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements_else>
<symbol>}</symbol>
</ifStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
</subroutineBody>
</subroutineDec>
<symbol>}</symbol>
</class>
